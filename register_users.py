from werkzeug.security import generate_password_hash
from database import db, User
from app import app

def register_user(username, password, role):
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º."""
    with app.app_context():
        hashed_password = generate_password_hash(password, method='pbkdf2:sha256')
        new_user = User(username=username, password=hashed_password, role=role)
        db.session.add(new_user)
        db.session.commit()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")

def change_password(username, new_password):
    """–ú–µ–Ω—è–µ—Ç –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    with app.app_context():
        user = User.query.filter_by(username=username).first()
        if not user:
            print(f"‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        hashed_password = generate_password_hash(new_password, method='pbkdf2:sha256')
        user.password = hashed_password
        db.session.commit()
        print(f"üîë –ü–∞—Ä–æ–ª—å –¥–ª—è {username} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.")

# ‚úÖ –ü—Ä–∏–º–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# register_user('manager1', 'password1', 'manager')
# register_user('admin', 'admin', 'admin')

# –ú–µ–Ω—è–µ–º –ø–∞—Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
change_password('admin', '4320005')  # –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è admin
change_password('manager1', '5586878')  # –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è manager1

